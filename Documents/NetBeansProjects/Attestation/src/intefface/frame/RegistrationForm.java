/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package intefface.frame;

import dao.DaoFactory;
import dao.UserDao;
import dao.entities.Group;
import dao.entities.LecturerWorkload;
import dao.entities.Student;
import dao.entities.Subject;
import dao.entities.User;
import intefface.AddDiscipline;
import intefface.AddGroup;
import intefface.AddStudentForm;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import validators.CheckInput;

/**
 *
 * @author nastja
 */
public class RegistrationForm extends javax.swing.JInternalFrame {
    private final DaoFactory daoFactory;
    private Component frame;
    DefaultTableModel modelGroup;
    DefaultTableModel modelSubject;
    List<Group> dataTableGroup = new ArrayList<>();
    List<Subject> dataTableSubjects = new ArrayList<>();
    List<LecturerWorkload> dataLecturerWorkloads = new ArrayList<>();
    /**
     * Creates new form Registration
     */
    public RegistrationForm() {
        System.out.println("regitr");
        initComponents();
        daoFactory = DaoFactory.getInstance(DaoFactory.DaoType.ORACLE);       
        fillComboBoxDisc();
        modelGroup= (DefaultTableModel)tableGroup.getModel();
        modelSubject = (DefaultTableModel)tableSubject.getModel();
        //fillTableGroup();
        tableGroup.setRowSelectionAllowed(true);
        tableSubject.setRowSelectionAllowed(true);
        tableSubject.getSelectionModel().addListSelectionListener(new RegistrationForm.RowListener());
    }
    
private void fillComboBoxDisc() {
        List<Subject> subjects= daoFactory.createSubjectDao().findAll();
        String[] listGroupCode = new String[subjects.size()];
        for(int i = 0; i < subjects.size(); i++){
            listGroupCode[i] = subjects.get(i).getName();
        }
        comboBoxDisc.setModel(new DefaultComboBoxModel(listGroupCode));
    }
private void fillComboBoxGroup() {
        int groupRow = tableSubject.getSelectedRow();
        if(groupRow != -1){
            comboBoxGroup.removeAllItems();
             System.out.println("fill comb");
            Subject subject = dataTableSubjects.get(groupRow); 
            System.out.println(subject.toString());
             List<Group> group = daoFactory.createLecturerWorkloadDao().findFreeGroup(subject);
             System.out.println(group.toString());
             String[] listGroupCode = new String[group.size()];
           
            comboBoxGroup.setModel(new DefaultComboBoxModel(group.toArray()));
            
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUserInfo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        labelRegistration = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        labelLogin = new javax.swing.JLabel();
        textFieldLogin = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        labelPassword = new javax.swing.JLabel();
        labelWrongName = new javax.swing.JLabel();
        labelWrongLogin = new javax.swing.JLabel();
        labelWrongPassword = new javax.swing.JLabel();
        panelRegistration = new javax.swing.JPanel();
        buttonAddGroup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSubject = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGroup = new javax.swing.JTable();
        buttonDeleteGroup = new javax.swing.JButton();
        buttonAddDisc = new javax.swing.JButton();
        buttonDeleteDisc = new javax.swing.JButton();
        buttonRegistrate = new javax.swing.JButton();
        comboBoxDisc = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        comboBoxGroup = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Registration form");
        setPreferredSize(new java.awt.Dimension(623, 463));

        panelUserInfo.setBackground(new java.awt.Color(255, 204, 153));

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        labelRegistration.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelRegistration.setText("Registration user:");

        labelName.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelName.setText("Name:");

        textFieldName.setText("Name");
        textFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNameActionPerformed(evt);
            }
        });

        labelLogin.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelLogin.setText("Login:");

        textFieldLogin.setText("Login");
        textFieldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldLoginActionPerformed(evt);
            }
        });

        passwordField.setText("jPasswordField1");

        labelPassword.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        labelPassword.setText("Password:");

        panelRegistration.setBackground(new java.awt.Color(255, 204, 153));

        buttonAddGroup.setBackground(new java.awt.Color(245, 134, 81));
        buttonAddGroup.setText("Add");
        buttonAddGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddGroupActionPerformed(evt);
            }
        });

        tableSubject.setBackground(new java.awt.Color(254, 239, 225));
        tableSubject.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSubject);

        tableGroup.setBackground(new java.awt.Color(254, 239, 225));
        tableGroup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableGroup);

        buttonDeleteGroup.setBackground(new java.awt.Color(245, 134, 81));
        buttonDeleteGroup.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        buttonDeleteGroup.setText("Delete");
        buttonDeleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteGroupActionPerformed(evt);
            }
        });

        buttonAddDisc.setBackground(new java.awt.Color(245, 134, 81));
        buttonAddDisc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        buttonAddDisc.setText("Add");
        buttonAddDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddDiscActionPerformed(evt);
            }
        });

        buttonDeleteDisc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        buttonDeleteDisc.setText("Delete");
        buttonDeleteDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteDiscActionPerformed(evt);
            }
        });

        buttonRegistrate.setBackground(new java.awt.Color(245, 134, 81));
        buttonRegistrate.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        buttonRegistrate.setText("Registrate");
        buttonRegistrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegistrateActionPerformed(evt);
            }
        });

        comboBoxDisc.setBackground(new java.awt.Color(245, 134, 81));
        comboBoxDisc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        comboBoxDisc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel1.setText("Subject:");

        comboBoxGroup.setBackground(new java.awt.Color(245, 134, 81));
        comboBoxGroup.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel2.setText("Group:");

        javax.swing.GroupLayout panelRegistrationLayout = new javax.swing.GroupLayout(panelRegistration);
        panelRegistration.setLayout(panelRegistrationLayout);
        panelRegistrationLayout.setHorizontalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonDeleteDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonDeleteGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(buttonRegistrate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRegistrationLayout.setVerticalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDeleteGroup)
                    .addComponent(buttonDeleteDisc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRegistrate, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelWrongName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWrongLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWrongPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWrongName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWrongLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWrongPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout panelUserInfoLayout = new javax.swing.GroupLayout(panelUserInfo);
        panelUserInfo.setLayout(panelUserInfoLayout);
        panelUserInfoLayout.setHorizontalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUserInfoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUserInfoLayout.setVerticalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserInfoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panelUserInfo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddDiscActionPerformed
       Subject subject = (Subject) daoFactory.createSubjectDao().find(comboBoxDisc.getSelectedItem().toString());
          dataTableSubjects.add(subject);
          modelSubject.addRow(new Object[]{subject.getName()});
          
    }//GEN-LAST:event_buttonAddDiscActionPerformed

    private void buttonDeleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteGroupActionPerformed
        int subjRow = tableSubject.getSelectedRow();
        int groupRow =  tableGroup.getSelectedRow();
         if(subjRow != -1 && groupRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);
            Group group = dataTableGroup.get(groupRow);
            for(LecturerWorkload l : dataLecturerWorkloads){
                if(l.getNameSubject().equals(subject.getName()) &&
                        l.getGroupCode().equals(group.getGroupCode())){
                    System.out.println("find delete");
                    dataLecturerWorkloads.remove(l);
                    break;
                }
            }
            modelGroup.removeRow(groupRow);
             System.out.println(dataLecturerWorkloads.toString());
             fillTableGroup();
            }  
    }//GEN-LAST:event_buttonDeleteGroupActionPerformed

    private void buttonAddGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddGroupActionPerformed
//        AddGroup addGroup = new AddGroup();
  //      addGroup.setVisible(true);
         Group group = (Group) daoFactory.createGroupDao().find((Group)comboBoxGroup.getSelectedItem());
          dataTableGroup.add(group);
          modelGroup.addRow(new Object[]{group.getGroupCode()});
         int subjRow = tableSubject.getSelectedRow();
         if(subjRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);
          dataLecturerWorkloads.add(new LecturerWorkload(0, subject.getName(), group.getGroupCode(), 0));
             System.out.println(dataLecturerWorkloads.toString());
            }       
        
    }//GEN-LAST:event_buttonAddGroupActionPerformed

    private void textFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNameActionPerformed

    private void textFieldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldLoginActionPerformed

    private void buttonRegistrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegistrateActionPerformed
        String login = textFieldLogin.getText();
        String name = textFieldName.getText();
        char[] password = passwordField.getPassword();
        if(checkInputData(password, login, name)){
            UserDao userDao = daoFactory.createUserDao();
            if(userDao.findByLogin(login)){
                labelWrongLogin.setText("Already exist");
            }else if(userDao.findByPassword(password)){
                labelWrongPassword.setText("Already exist");
            }else{
                User user = userDao.create(login, new String(password), name);
                setIdUser(user);
                for(LecturerWorkload l : dataLecturerWorkloads){
                    daoFactory.createLecturerWorkloadDao().create(l);
                }
            }
            
            
        }
    }//GEN-LAST:event_buttonRegistrateActionPerformed

    private void buttonDeleteDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteDiscActionPerformed
         int subjRow = tableSubject.getSelectedRow();
         if(subjRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);
            for(LecturerWorkload l : dataLecturerWorkloads){
                if(l.getNameSubject().equals(subject.getName())){
                    dataLecturerWorkloads.remove(l);
                    break;
                }
            }
            modelSubject.removeRow(subjRow);
             System.out.println(dataLecturerWorkloads.toString());
            } 
    }//GEN-LAST:event_buttonDeleteDiscActionPerformed
 private boolean checkInputData(char[] password, String login, String name) {
        CheckInput checkInput = new CheckInput();
        if(checkInput.checkPassword(password) && checkInput.checkLogin(login)
                && checkInput.checkName(name)){
            return true;
        }else{
        if(!checkInput.checkPassword(password)){
            System.out.println("Wrong password");
            labelWrongPassword.setVisible(true);
            labelWrongPassword.setText("Wrong password");
        }
        if(!checkInput.checkLogin(login)){
            System.out.println("Wrong login");
            labelWrongLogin.setVisible(true);
            labelWrongLogin.setText("Wrong login");
        }
        if(!checkInput.checkName(name)){
            System.out.println("Wrong login");
            labelWrongName.setVisible(true);
            labelWrongName.setText("Wrong login");
        }
        return false;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddDisc;
    private javax.swing.JButton buttonAddGroup;
    private javax.swing.JButton buttonDeleteDisc;
    private javax.swing.JButton buttonDeleteGroup;
    private javax.swing.JButton buttonRegistrate;
    private javax.swing.JComboBox comboBoxDisc;
    private javax.swing.JComboBox comboBoxGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelRegistration;
    private javax.swing.JLabel labelWrongLogin;
    private javax.swing.JLabel labelWrongName;
    private javax.swing.JLabel labelWrongPassword;
    private javax.swing.JPanel panelRegistration;
    private javax.swing.JPanel panelUserInfo;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTable tableGroup;
    private javax.swing.JTable tableSubject;
    private javax.swing.JTextField textFieldLogin;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables

    private void fillTableGroup() {
        clearTableGroup();
        
       int subjRow = tableSubject.getSelectedRow();
        if(subjRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);       
            //dataTableGroup = daoFactory.createLecturerWorkloadDao().find(subject);
            int i = 0;
            for(LecturerWorkload l : dataLecturerWorkloads){
                System.out.println();
                if(l.getNameSubject().equals(subject.getName())){
                    modelGroup.addRow(new Object[]{l.getGroupCode()});
                }
            }
        }
    }
   
    
    private void fillTableSubject() {
       // clearTableGroup();
        dataTableSubjects = daoFactory.createSubjectDao().findAll();
   
       for(Group s : dataTableGroup){
           System.out.println(s);
           modelGroup.addRow(new Object[]{s.getGroupCode()});
       }    
    }

    private void clearTableGroup() {
       int n = tableGroup.getRowCount();
        for (int i = 0; i < n; i++) {
            System.out.println(tableGroup.getRowCount());
          modelGroup.removeRow(0);       
        }
    }

    private void setIdUser(User user) {
        for(LecturerWorkload l : dataLecturerWorkloads){
            l.setIdUser(user.getID());
        }
    }
    
    
     private class RowListener implements ListSelectionListener {
        public void valueChanged(ListSelectionEvent event) {
            if (event.getValueIsAdjusting()) {
                return;
            }
            System.out.println("row selected");
            fillTableGroup();
            fillComboBoxGroup();
            
        }
      }
     
     
}
