/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package intefface;

import dao.DaoFactory;
import dao.entities.DateAttestation;
import dao.entities.Group;
import dao.entities.LecturerWorkload;
import dao.entities.Subject;
import dao.entities.User;
import intefface.frame.DateAttestationForm;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import validators.CheckInput;

/**
 *
 * @author nastja
 */
public class EditUser extends javax.swing.JFrame {
    DaoFactory daoFactory;
    User user;
    List<LecturerWorkload> lw;
    List<Subject> subjects;
    DefaultTableModel modelSubject;
    DefaultTableModel modelGroup;
    List<Group> dataTableGroup = new ArrayList<>();
    List<Subject> dataTableSubjects = new ArrayList<>();
    List<LecturerWorkload> newLecturerWorkloads = new ArrayList<>();
    List<Subject> deleteSubject = new ArrayList<>();
    /**
     * Creates new form EditUser
     */
    
    public EditUser() {
        initComponents();
        modelGroup = (DefaultTableModel) tableGroup.getModel();
        modelSubject = (DefaultTableModel) tableSubject.getModel();
    }

    public EditUser(User user) {
        initComponents();
        this.user = user;
        daoFactory = DaoFactory.getInstance(DaoFactory.DaoType.ORACLE);
        lw = daoFactory.createLecturerWorkloadDao().findWorkload(user);
        tableSubject.setRowSelectionAllowed(true);
        tableSubject.getSelectionModel().addListSelectionListener(new RowListenerSubj());
        modelSubject = (DefaultTableModel) tableSubject.getModel();
        modelGroup = (DefaultTableModel) tableGroup.getModel();
        subjects = daoFactory.createSubjectDao().findAll();
        dataTableSubjects = daoFactory.createLecturerWorkloadDao().findSubjList(user);
        textFieldLogin.setText(user.getLogin());
        textFieldName.setText(user.getName());
        passwordField.setText(user.getPassword());
        fillComboBoxDisc();
        fillComboBoxGroup();
        fillTableSubject();
    }
  public void setUser(User user){
      this.user = user;
      textFieldLogin.setText(user.getLogin());
      textFieldName.setText(user.getName());
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUserInfo = new javax.swing.JPanel();
        panelRegistration = new javax.swing.JPanel();
        buttonAddGroup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSubject = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGroup = new javax.swing.JTable();
        buttonDeleteGroup = new javax.swing.JButton();
        buttonAddDisc = new javax.swing.JButton();
        buttonDeleteDisc = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        comboBoxDisc = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        comboBoxGroup = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelEdit = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        labelLogin = new javax.swing.JLabel();
        textFieldLogin = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        labelPassword = new javax.swing.JLabel();
        labelWrongName = new javax.swing.JLabel();
        labelWrongLogin = new javax.swing.JLabel();
        labelWrongPassword = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonAddGroup.setText("Add");
        buttonAddGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddGroupActionPerformed(evt);
            }
        });

        tableSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "#", "Discipline"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSubject);

        tableGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "#", "Group"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableGroup);

        buttonDeleteGroup.setText("Delete");
        buttonDeleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteGroupActionPerformed(evt);
            }
        });

        buttonAddDisc.setText("Add");
        buttonAddDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddDiscActionPerformed(evt);
            }
        });

        buttonDeleteDisc.setText("Delete");
        buttonDeleteDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteDiscActionPerformed(evt);
            }
        });

        buttonEdit.setText("Edit");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        comboBoxDisc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Discipline:");

        comboBoxGroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Group:");

        javax.swing.GroupLayout panelRegistrationLayout = new javax.swing.GroupLayout(panelRegistration);
        panelRegistration.setLayout(panelRegistrationLayout);
        panelRegistrationLayout.setHorizontalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDeleteDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRegistrationLayout.createSequentialGroup()
                        .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelRegistrationLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(buttonAddDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonDeleteGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelRegistrationLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonAddGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistrationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );
        panelRegistrationLayout.setVerticalGroup(
            panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrationLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDeleteDisc)
                    .addComponent(buttonDeleteGroup))
                .addGap(19, 19, 19)
                .addComponent(buttonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        labelEdit.setText("Edit user:");

        labelName.setText("Name:");

        textFieldName.setText("Name");
        textFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNameActionPerformed(evt);
            }
        });

        labelLogin.setText("Login:");

        textFieldLogin.setText("Login");
        textFieldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldLoginActionPerformed(evt);
            }
        });

        passwordField.setText("jPasswordField1");

        labelPassword.setText("Password:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWrongName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWrongLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWrongPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWrongName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWrongLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelWrongPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout panelUserInfoLayout = new javax.swing.GroupLayout(panelUserInfo);
        panelUserInfo.setLayout(panelUserInfoLayout);
        panelUserInfoLayout.setHorizontalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRegistration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelUserInfoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUserInfoLayout.setVerticalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserInfoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelUserInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 502, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelUserInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddGroupActionPerformed
          Group group = (Group) daoFactory.createGroupDao().find((Group)comboBoxGroup.getSelectedItem());
          dataTableGroup.add(group);
          modelGroup.addRow(new Object[]{group.getGroupCode()});
        int subjRow = tableSubject.getSelectedRow();
         if(subjRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);
          newLecturerWorkloads.add(new LecturerWorkload(0, subject.getName(), group.getGroupCode(), user.getID()));
             System.out.println("new Lecture" + newLecturerWorkloads.toString());
            } 
         
         fillTableGroup();
    }//GEN-LAST:event_buttonAddGroupActionPerformed

    private void buttonDeleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteGroupActionPerformed
       Group group = (Group) daoFactory.createGroupDao().find((Group)comboBoxGroup.getSelectedItem());
          dataTableGroup.add(group);
          modelGroup.addRow(new Object[]{group.getGroupCode()});
        int subjRow = tableSubject.getSelectedRow();
         if(subjRow != -1){
            Subject subject = dataTableSubjects.get(subjRow);
          newLecturerWorkloads.remove(new LecturerWorkload(0, subject.getName(), group.getGroupCode(), user.getID()));
             System.out.println("new Lecture" + newLecturerWorkloads.toString());
            } 
         fillTableGroup();
    }//GEN-LAST:event_buttonDeleteGroupActionPerformed

    private void buttonAddDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddDiscActionPerformed
        dataTableSubjects.add((Subject)comboBoxDisc.getSelectedItem());
        fillTableSubject();
    }//GEN-LAST:event_buttonAddDiscActionPerformed

    private void textFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNameActionPerformed

    private void textFieldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldLoginActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
      String login = textFieldLogin.getText();
        String name = textFieldName.getText();
        char[] password = passwordField.getPassword();
        labelWrongLogin.setVisible(false);
        labelWrongName.setVisible(false);
        labelWrongPassword.setVisible(false);
        if(checkInputData(password, login, name)){
            user.setLogin(login);
            user.setName(name);
            user.setPassword(new String(password));
            daoFactory.createUserDao().update(user);
        }
        this.setVisible(false);
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonDeleteDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteDiscActionPerformed
         dataTableSubjects.remove((Subject)comboBoxDisc.getSelectedItem());
        deleteSubject((Subject)comboBoxDisc.getSelectedItem());
        fillTableSubject();/// TODO add your handling code here:
    }//GEN-LAST:event_buttonDeleteDiscActionPerformed
private boolean checkInputData(char[] password, String login, String name) {
        CheckInput checkInput = new CheckInput();
        if(checkInput.checkPassword(password) && checkInput.checkLogin(login)
                && checkInput.checkName(name)){
            return true;
        }else{
        if(!checkInput.checkPassword(password)){
            System.out.println("Wrong password");
            labelWrongPassword.setText("Wrong password");
            labelWrongPassword.setVisible(true);
        }
        if(!checkInput.checkLogin(login)){
            System.out.println("Wrong login");
            labelWrongLogin.setVisible(true);
            labelWrongLogin.setText("Wrong login");
        }
        if(!checkInput.checkName(name)){
            System.out.println("Wrong name");
            labelWrongName.setVisible(true);
            labelWrongName.setText("Wrong name");
        }
        return false;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddDisc;
    private javax.swing.JButton buttonAddGroup;
    private javax.swing.JButton buttonDeleteDisc;
    private javax.swing.JButton buttonDeleteGroup;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JComboBox comboBoxDisc;
    private javax.swing.JComboBox comboBoxGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEdit;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelWrongLogin;
    private javax.swing.JLabel labelWrongName;
    private javax.swing.JLabel labelWrongPassword;
    private javax.swing.JPanel panelRegistration;
    private javax.swing.JPanel panelUserInfo;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTable tableGroup;
    private javax.swing.JTable tableSubject;
    private javax.swing.JTextField textFieldLogin;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables


    
    private void fillTableSubject() {
        clearTableSubject();

        
        for(int i = 0; i < dataTableSubjects.size(); i++){
           modelSubject.addRow(new Object[]{(i + 1), dataTableSubjects.get(i)});
        }

    }
    
   private void fillComboBoxDisc() {
        String[] listGroupCode = new String[subjects.size()];
        for(int i = 0; i < subjects.size(); i++){
            listGroupCode[i] = subjects.get(i).getName();
        }
        comboBoxDisc.setModel(new DefaultComboBoxModel(listGroupCode));
    }
   
private void fillComboBoxGroup() {
        int groupRow = tableSubject.getSelectedRow();
        if(groupRow != -1){
            comboBoxGroup.removeAllItems();
             System.out.println("fill comb");
            Subject subject = subjects.get(groupRow); 
            System.out.println(subject.toString());
             List<Group> group = daoFactory.createLecturerWorkloadDao().findFreeGroup(subject);
             System.out.println(group.toString());
             String[] listGroupCode = new String[group.size()];
           
            comboBoxGroup.setModel(new DefaultComboBoxModel(group.toArray()));
            
        }
}

    private void clearTableSubject() {
        int n = tableSubject.getRowCount();
        if (tableSubject.getRowCount() != 0) {
            for (int i = 0; i < n; i++) {
                System.out.println(tableSubject.getRowCount());
                modelSubject.removeRow(0);
            }
        }
    }
    
       private void fillTableGroup() {
            int subj = tableSubject.getSelectedRow();
            if(subj != -1){
            //comboBoxGroup.removeAllItems();
                clearTableGroup();
             List<Group> group = daoFactory.createLecturerWorkloadDao().
                     findGroupList(user, subjects.get(subj));
                System.out.println(group);
             System.out.println(group.toString());
             //String[] listGroupCode = new String[group.size()];
             for(int i = 0; i < group.size(); i++){
               // listGroupCode[i] = group.get(i).getGroupCode();
                modelGroup.addRow(new Object[]{(i+1), group.get(i)});
            }
            
        }
        }

     private void clearTableGroup() {
        int n = tableGroup.getRowCount();
        if (n != 0) {
            for (int i = 0; i < n; i++) {
                System.out.println(tableGroup.getRowCount());
                modelGroup.removeRow(0);
            }
        }
    }

    private void deleteSubject(Subject subject) {
       for(int i = 0; i < newLecturerWorkloads.size(); i++){
           if(newLecturerWorkloads.get(i).getNameSubject().equals(subject.getName())){
               newLecturerWorkloads.remove(i);
           }
       }
       deleteSubject.add(subject);
    }
    
    private class RowListenerSubj implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent event) {
            if (event.getValueIsAdjusting()) {
                return;
            }
            System.out.println("column selected");
            buttonDeleteDisc.setEnabled(true);
            buttonEdit.setEnabled(true);
            if (tableSubject.getSelectedRow() != -1) {
                buttonDeleteDisc.setEnabled(true);
                
                fillTableGroup();
                fillComboBoxGroup();
              
            }
        }

     

    }
}
